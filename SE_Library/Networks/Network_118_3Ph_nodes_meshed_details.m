
function Network = Network_118_3Ph_nodes_meshed_details()
%%
%Network Topology
Network.nodes.num_nodes = 118;

Network.nodes.Available_nodes_reduction = [8, 15, 118];  

Network.branches.From = [1, 2, 2, 4, 4, 6, 2, 8, 9, 9, 11, 12, 12, 9, 15, 16, 17, 17, 15, 20, 21, 20, 23, 23, 25, 25, 27, 28, 29, 28, 31, 27, 33, 34, 35, 20, ...
                37, 38, 38, 40, 37, 42, 42, 44, 44, 46, 47, 46, 49, 49, 51, 52, 15, 54, 55, 56, 57, 56, 59, 60, 59, 62, 62, 64, 65, 66, 67, 62, 69, ...
                70, 71, 72, 69, 74, 75, 76, 74, 78, 79, 80, 80, 82, 83, 84, 83, 86, 78, 88, 89, 89, 91, 91, 93, 93, 95, 95, 97, 69, 99, 100, 101, ...
                102, 99, 104, 105, 106, 104, 108, 109, 108, 111, 111, 113, 114, 114, 116, 117, 36, 67]';
Network.branches.To = 2:1:118; 
Network.branches.To = Network.branches.To'; 
Network.branches.To = [Network.branches.To; 49; 112];

%%
%Network Parameters
%branch length in miles
Network.branches.branch_length = [400, 175, 250, 200, 325, 250, 300, 200, 225, 225, 425, 250, 250, 300, 150, 100, 350, 375, 825, 250, 325, 300, 525, 250, 550, 275, ...
                 350, 225, 300, 275, 500, 200, 300, 350, 200, 375, 650, 300, 250, 325, 250, 325, 250, 500, 200, 200, 300, 250, 150, 250, 250, 250, ...
                 400, 200, 125, 275, 250, 350, 250, 250, 750, 550, 250, 175, 350, 425, 325, 350, 200, 275, 325, 275, 275, 275, 350, 400, 200, 400, ...
                 100, 225, 475, 175, 250, 250, 675, 475, 700, 450, 175, 275, 250, 225, 300, 225, 275, 300, 200, 250, 275, 550, 300, 800, 250, 225, ...
                 325, 700, 275, 225, 575, 325, 1000, 450, 300, 575, 125, 525, 325, 600, 500]/5280; % miles (5280 feet per mile)
             
%branch cofig, the network is composed by different physical connectors
%whose physical parameters are detailed in the file
%branch_impedence_from_config.com
%config: code of the type of branch
Network.branches.branch_config = [1, 10, 11, 11, 11, 11, 1, 1, 10, 9, 9, 9, 9, 1, 11, 11, 11, 11, 2, 9, 9, 2, 10, 2, 11, 2, 7, 11, 11, 9, 9, 2, 2, 2, 2, 4, 8, 9, 10, ...
                 10, 1, 11, 1, 10, 1, 9, 9, 1, 4, 4, 7, 9, 1, 1, 1, 8, 10, 3, 10, 10, 3, 11, 12, 12, 12, 12, 11, 6, 9, 9, 9, 9, 3, 11, 11, 11, 3, 6, 6, ...
                 9, 6, 7, 7, 11, 11, 11, 3, 6, 9, 6, 10, 6, 11, 8, 9, 10, 10, 3, 3, 3, 3, 3, 3, 11, 11, 11, 3, 10, 10, 3, 3, 9, 9, 9, 9, 9, 9, 2, 2]';
          


%%
%Network base values
Network.base.BaseVA = 5000; % kVA
Network.base.BaseV = 4.16;  % kV
% BaseV = 4.16/sqrt(3);  % kV

%Active Power
PA = [40, 0, 0, 0, 0, 0, 20, 0, 0, 40, 0, 20.12, 40.45, 0, 0, 0, 0, 0, 0, 40, 39.87, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39.81, 39.87, 39.73, 0, 20, 40, 0, 39.55, 0, 0, 0, 0, 0, 0, 0, 19.83, 20, ...
      34.68, 68.68, 35, 0, 20, 40, 40, 0, 19.90, 0, 0, 0, 0, 20, 0, 0, 40, 0, 34.68, 0, 0, 20, 40, 20, 40, 0, 0, 0, 0, 107.59, 0, 0, 43.01, 0, 0, 40, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, ...
      40, 0, 0, 0, 40, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 20, 40, 0, 20, 20.48, 41.78, 20]';

PB = [0, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42.48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 20.56, 20, 0, 0, 0, 42.08, 0, 0, 0, 35.88, 73.54, 70, 0, ...
      0, 0, 0, 0, 0, 20, 0, 20.60, 20, 0, 0, 0, 0, 76.63, 35.79, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72.32, 40, 0, 0, 40, 0, 0, 0, 0, 0, 20, 40, 0, 0, 41.08, 0, 0, 0, 0, 20, 20, 0, 0, 40, 0, ...
      20, 0, 0, 0, 0, 0, 40, 40, 0, 20, 0, 0, 0, 0, 0, 0]';

PC = [0, 0, 0, 40, 20.64, 42.53, 0, 0, 0, 0, 0, 0, 0, 0, 41.51, 0, 20, 40, 0, 0, 0, 0, 0, 0, 40, 0, 0, 20, 20, 0, 0, 0, 0, 40, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 35.26, 71.01, 35, ...
      40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 40.25, 0, 0, 69.60, 75, 0, 0, 0, 0, 0, 0, 40, 42.46, 40, 72.97, 0, 0, 0, 0, 0, 0, 20, 20, 40, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 42.67, ...
      20, 0, 20, 40, 40, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0]';

%Reactive Power
QA = [20, 0, 0, 0, 0, 0, 10, 0, 0, 20, 0, 10.06, 20.23, 0, 0, 0, 0, 0, 0, 20, 19.93, 0, 0, 0, 0, 0, 0, 0, 0, 0, 19.91, 19.94, 19.87, 0, 10, 20, 0, 19.77, 0, 0, 0, 0, 10, 0, 0, 9.91, 10, ...
      24.77, 49.05, 25, 0, 10, 20, 20, 0, 9.95, 0, 0, 0, 0, 10, 0, 0, 20, 0, 24.77, 0, 0, 10, 20, 10, 20, 0, 0, 0, 0, 81.97, 0, 0, 21.51, 0, 0, 20, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 20, ...
      0, 0, 0, 20, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 10, 20, 0, 10, 10.24, 20.89, 10]';
QB = [0, 10, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21.24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 10.28, 10, 0, 0, 0, 21.04, 0, 0, 0, 25.63, 52.53, 50, 0, 0, ...
      0, 0, 0, 0, 10, 0, 10.30, 10, 0, 0, 0, 0, 35.76, 25.57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51.66, 20, 0, 0, 20, 0, 0, 0, 0, 0, 10, 20, 0, 0, 20.54, 0, 0, 0, 0, 10, 10, 0, 0, 20, 0, 10, ...
      0, 0, 0, 0, 0, 20, 20, 0, 10, 0, 0, 0, 0, 0, 0]';
QC = [0, 0, 0, 20, 10.32, 21.27, 0, 0, 0, 0, 0, 0, 0, 0, 20.75, 0, 10, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 10, 10, 0, 0, 0, 0, 20, 10, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 25.18, 50.72, 20, ...
      20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 20.13, 0, 0, 49.72, 35, 0, 0, 0, 0, 0, 0, 20, 21.23, 20, 52.12, 0, 0, 0, 0, 0, 0, 10, 10, 20, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, ...
      21.33, 10, 0, 10, 20, 20, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0]';
  
Network.load.P = [PA, PB, PC];
Network.load.Q = [QA, QB, QC];
clear P* Q*
